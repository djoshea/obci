function outSize = getSerializedBusLength_RigInputBus(bus, namePrefix)
%#codegen
% DO NOT EDIT: Auto-generated by 
%   BusSerialize.writeGetSerializedBusLengthCode('RigInputBus')

    if nargin < 2, namePrefix = uint8(''); end
    namePrefixBytes = uint8(namePrefix(:))';
    outSize = uint32(0);
    % element rigConfig
    outSize = outSize + uint32(getSerializedBusLength_RigConfigBus(bus.rigConfig(1), uint8([namePrefix '_rigConfig']))); % for rigConfig nested bus

    % element clock
    outSize = outSize + uint32(1); % bit flags
    outSize = outSize + uint32(1); % signal type
    outSize = outSize + uint32(2 + numel(namePrefixBytes) + 5); % for name (including prefix)
    outSize = outSize + uint32(2 + 2); % for units
    outSize = outSize + uint32(1); % for data type id
    outSize = outSize + uint32(1 + 2*1); % for dimensions
    outSize = outSize + uint32(4 * numel(bus.clock)); % for clock data 

    % element hand
    outSize = outSize + uint32(getSerializedBusLength_HandBus(bus.hand(1), uint8([namePrefix '_hand']))); % for hand nested bus

    % element eye
    outSize = outSize + uint32(getSerializedBusLength_EyeInputBus(bus.eye(1), uint8([namePrefix '_eye']))); % for eye nested bus

    % element analog
    outSize = outSize + uint32(getSerializedBusLength_AnalogInputBus(bus.analog(1), uint8([namePrefix '_analog']))); % for analog nested bus

    % element scopeState
    outSize = outSize + uint32(getSerializedBusLength_MicroscopeStateBus(bus.scopeState(1), uint8([namePrefix '_scopeState']))); % for scopeState nested bus

    % element scopeTiming
    outSize = outSize + uint32(getSerializedBusLength_ScopeTimingBus(bus.scopeTiming(1), uint8([namePrefix '_scopeTiming']))); % for scopeTiming nested bus

    % element mOEGFrameInfo
    outSize = outSize + uint32(getSerializedBusLength_mOEGFrameInfoBus(bus.mOEGFrameInfo(1), uint8([namePrefix '_mOEGFrameInfo']))); % for mOEGFrameInfo nested bus

    % element decoderBus
    outSize = outSize + uint32(getSerializedBusLength_DecoderBus(bus.decoderBus(1), uint8([namePrefix '_decoderBus']))); % for decoderBus nested bus


end