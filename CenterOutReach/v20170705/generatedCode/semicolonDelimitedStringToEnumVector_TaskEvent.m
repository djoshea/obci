function [enumVector, nValues, valid] = semicolonDelimitedStringToEnumVector_TaskEvent(str, enumVector)
%#codegen
% DO NOT EDIT: Auto-generated by 
%   BusSerialize.writeSemicolonDelimitedStringToEnumVectorCode('TaskEvent')

    valid = uint8(1);
    nValues = uint32(0);
    coder.varsize('token', 27);
    if nargin < 2
        maxValues = Inf; % for matlab use only
        enumVector = TaskEvent.empty(0, 1);
    else
        maxValues = numel(enumVector); % for simulink codegen use, required to avoid undetermined max size issue
    end

    counter = 1;
    idx1 = 1;
    while(idx1 <= numel(str))
        idx2 = idx1+1;
        while(idx2 <= numel(str))
            if str(idx2) == ';'
                break;
            end
            idx2 = idx2 + 1;
        end

    if idx2-idx1 > 27
        valid = uint8(0);
        return;
    end
    token = str(idx1:idx2-1);
        if isequal(uint8(token(:)), uint8('CenterOnset')')
            enumVector(counter) = TaskEvent.CenterOnset;
        elseif isequal(uint8(token(:)), uint8('CenterAcquired')')
            enumVector(counter) = TaskEvent.CenterAcquired;
        elseif isequal(uint8(token(:)), uint8('CenterUnacquired')')
            enumVector(counter) = TaskEvent.CenterUnacquired;
        elseif isequal(uint8(token(:)), uint8('CenterSettled')')
            enumVector(counter) = TaskEvent.CenterSettled;
        elseif isequal(uint8(token(:)), uint8('CenterHeld')')
            enumVector(counter) = TaskEvent.CenterHeld;
        elseif isequal(uint8(token(:)), uint8('TargetOnsetCommand')')
            enumVector(counter) = TaskEvent.TargetOnsetCommand;
        elseif isequal(uint8(token(:)), uint8('GoCueCommand')')
            enumVector(counter) = TaskEvent.GoCueCommand;
        elseif isequal(uint8(token(:)), uint8('GoCue')')
            enumVector(counter) = TaskEvent.GoCue;
        elseif isequal(uint8(token(:)), uint8('TargetOnset')')
            enumVector(counter) = TaskEvent.TargetOnset;
        elseif isequal(uint8(token(:)), uint8('MoveOnsetOnline')')
            enumVector(counter) = TaskEvent.MoveOnsetOnline;
        elseif isequal(uint8(token(:)), uint8('MoveOnsetThresh')')
            enumVector(counter) = TaskEvent.MoveOnsetThresh;
        elseif isequal(uint8(token(:)), uint8('TargetAcquired')')
            enumVector(counter) = TaskEvent.TargetAcquired;
        elseif isequal(uint8(token(:)), uint8('TargetUnacquired')')
            enumVector(counter) = TaskEvent.TargetUnacquired;
        elseif isequal(uint8(token(:)), uint8('TargetSettled')')
            enumVector(counter) = TaskEvent.TargetSettled;
        elseif isequal(uint8(token(:)), uint8('TargetHeld')')
            enumVector(counter) = TaskEvent.TargetHeld;
        elseif isequal(uint8(token(:)), uint8('ReachEnd')')
            enumVector(counter) = TaskEvent.ReachEnd;
        elseif isequal(uint8(token(:)), uint8('Success')')
            enumVector(counter) = TaskEvent.Success;
        elseif isequal(uint8(token(:)), uint8('FailureToAcquireCenter')')
            enumVector(counter) = TaskEvent.FailureToAcquireCenter;
        elseif isequal(uint8(token(:)), uint8('FailureBrokeCenterHold')')
            enumVector(counter) = TaskEvent.FailureBrokeCenterHold;
        elseif isequal(uint8(token(:)), uint8('FailureBrokeCenterHoldDelay')')
            enumVector(counter) = TaskEvent.FailureBrokeCenterHoldDelay;
        elseif isequal(uint8(token(:)), uint8('FailureRTTooFast')')
            enumVector(counter) = TaskEvent.FailureRTTooFast;
        elseif isequal(uint8(token(:)), uint8('FailureRTTooSlow')')
            enumVector(counter) = TaskEvent.FailureRTTooSlow;
        elseif isequal(uint8(token(:)), uint8('FailureToAcquireTarget')')
            enumVector(counter) = TaskEvent.FailureToAcquireTarget;
        elseif isequal(uint8(token(:)), uint8('FailureBrokeTargetHold')')
            enumVector(counter) = TaskEvent.FailureBrokeTargetHold;
        elseif isequal(uint8(token(:)), uint8('FailureLowPeakVelocity')')
            enumVector(counter) = TaskEvent.FailureLowPeakVelocity;
        elseif isequal(uint8(token(:)), uint8('FailureHandNotSeen')')
            enumVector(counter) = TaskEvent.FailureHandNotSeen;
        elseif isequal(uint8(token(:)), uint8('DecodeComplete')')
            enumVector(counter) = TaskEvent.DecodeComplete;
        else
            valid = uint8(0);
            return;
        end
        counter = counter + 1;
        if counter > maxValues
            nValues = uint32(counter - 1);
            return;
        end
        idx1 = idx2 + 1;
    end
    nValues = uint32(counter - 1);

end