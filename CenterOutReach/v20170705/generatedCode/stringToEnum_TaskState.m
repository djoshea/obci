function [enumValue, valid] = stringToEnum_TaskState(str)
%#codegen
% DO NOT EDIT: Auto-generated by 
%   BusSerialize.writeEnumToStringCode('TaskState')

    valid = uint8(1);
    if isequal(uint8(str(:)), uint8('TaskPaused')')
        enumValue = TaskState.TaskPaused;
    elseif isequal(uint8(str(:)), uint8('StartTask')')
        enumValue = TaskState.StartTask;
    elseif isequal(uint8(str(:)), uint8('GetNewTrialParams')')
        enumValue = TaskState.GetNewTrialParams;
    elseif isequal(uint8(str(:)), uint8('InitTrial')')
        enumValue = TaskState.InitTrial;
    elseif isequal(uint8(str(:)), uint8('WaitCenterAcquire')')
        enumValue = TaskState.WaitCenterAcquire;
    elseif isequal(uint8(str(:)), uint8('WaitCenterSettle')')
        enumValue = TaskState.WaitCenterSettle;
    elseif isequal(uint8(str(:)), uint8('WaitCenterHold')')
        enumValue = TaskState.WaitCenterHold;
    elseif isequal(uint8(str(:)), uint8('DelayPeriod')')
        enumValue = TaskState.DelayPeriod;
    elseif isequal(uint8(str(:)), uint8('GoCueZeroDelay')')
        enumValue = TaskState.GoCueZeroDelay;
    elseif isequal(uint8(str(:)), uint8('GoCueNonZeroDelay')')
        enumValue = TaskState.GoCueNonZeroDelay;
    elseif isequal(uint8(str(:)), uint8('WaitMoveOnset')')
        enumValue = TaskState.WaitMoveOnset;
    elseif isequal(uint8(str(:)), uint8('WaitTargetAcquire')')
        enumValue = TaskState.WaitTargetAcquire;
    elseif isequal(uint8(str(:)), uint8('WaitTargetSettle')')
        enumValue = TaskState.WaitTargetSettle;
    elseif isequal(uint8(str(:)), uint8('WaitTargetHold')')
        enumValue = TaskState.WaitTargetHold;
    elseif isequal(uint8(str(:)), uint8('Success')')
        enumValue = TaskState.Success;
    elseif isequal(uint8(str(:)), uint8('ReachEnd')')
        enumValue = TaskState.ReachEnd;
    elseif isequal(uint8(str(:)), uint8('ITI')')
        enumValue = TaskState.ITI;
    elseif isequal(uint8(str(:)), uint8('FailureCenterAcquire')')
        enumValue = TaskState.FailureCenterAcquire;
    elseif isequal(uint8(str(:)), uint8('FailureCenterHold')')
        enumValue = TaskState.FailureCenterHold;
    elseif isequal(uint8(str(:)), uint8('FailureDelayMove')')
        enumValue = TaskState.FailureDelayMove;
    elseif isequal(uint8(str(:)), uint8('FailureRTTooFast')')
        enumValue = TaskState.FailureRTTooFast;
    elseif isequal(uint8(str(:)), uint8('FailureRTTooSlow')')
        enumValue = TaskState.FailureRTTooSlow;
    elseif isequal(uint8(str(:)), uint8('FailureTargetAcquire')')
        enumValue = TaskState.FailureTargetAcquire;
    elseif isequal(uint8(str(:)), uint8('FailureTargetHold')')
        enumValue = TaskState.FailureTargetHold;
    elseif isequal(uint8(str(:)), uint8('FailureLowPeakVelocity')')
        enumValue = TaskState.FailureLowPeakVelocity;
    elseif isequal(uint8(str(:)), uint8('FailureHandNotSeen')')
        enumValue = TaskState.FailureHandNotSeen;
    elseif isequal(uint8(str(:)), uint8('TaskPurgatory')')
        enumValue = TaskState.TaskPurgatory;
    else
        enumValue = TaskState.TaskPaused;
        valid = uint8(0);
    end
end