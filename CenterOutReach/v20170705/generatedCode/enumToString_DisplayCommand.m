function [str, valid] = enumToString_DisplayCommand(enumValue)
%#codegen
% DO NOT EDIT: Auto-generated by 
%   BusSerialize.writeEnumToStringCode('DisplayCommand')

    valid = uint8(1);
    coder.varsize('str', [1 25], [false true]);
    if ischar(enumValue), str = enumValue; valid = uint8(1); return; end
    switch enumValue
        case DisplayCommand.TaskPaused
            str = uint8('TaskPaused');
        case DisplayCommand.StartTask
            str = uint8('StartTask');
        case DisplayCommand.InitTrial
            str = uint8('InitTrial');
        case DisplayCommand.CenterOnset
            str = uint8('CenterOnset');
        case DisplayCommand.CenterAcquired
            str = uint8('CenterAcquired');
        case DisplayCommand.CenterSettled
            str = uint8('CenterSettled');
        case DisplayCommand.CenterHeld
            str = uint8('CenterHeld');
        case DisplayCommand.DelayPeriodStart
            str = uint8('DelayPeriodStart');
        case DisplayCommand.GoCueZeroDelay
            str = uint8('GoCueZeroDelay');
        case DisplayCommand.GoCueNonZeroDelay
            str = uint8('GoCueNonZeroDelay');
        case DisplayCommand.MoveOnset
            str = uint8('MoveOnset');
        case DisplayCommand.ImageDecodeTestObject
            str = uint8('ImageDecodeTestObject');
        case DisplayCommand.ImageDecodeTestObjectHide
            str = uint8('ImageDecodeTestObjectHide');
        case DisplayCommand.DecodeSuccess
            str = uint8('DecodeSuccess');
        case DisplayCommand.DecodeFail
            str = uint8('DecodeFail');
        case DisplayCommand.TargetAcquired
            str = uint8('TargetAcquired');
        case DisplayCommand.TargetSettled
            str = uint8('TargetSettled');
        case DisplayCommand.TargetHeld
            str = uint8('TargetHeld');
        case DisplayCommand.Success
            str = uint8('Success');
        case DisplayCommand.FailureCenterFlyAway
            str = uint8('FailureCenterFlyAway');
        case DisplayCommand.FailureTargetFlyAway
            str = uint8('FailureTargetFlyAway');
        case DisplayCommand.ITI
            str = uint8('ITI');
        case DisplayCommand.CenterUnacquired
            str = uint8('CenterUnacquired');
        case DisplayCommand.TargetUnacquired
            str = uint8('TargetUnacquired');
        case DisplayCommand.FailureHitObstacle
            str = uint8('FailureHitObstacle');
        case DisplayCommand.HitObstacle
            str = uint8('HitObstacle');
        case DisplayCommand.ReleasedObstacle
            str = uint8('ReleasedObstacle');
        case DisplayCommand.ObstacleOnset
            str = uint8('ObstacleOnset');
        case DisplayCommand.TargetShift
            str = uint8('TargetShift');
        case DisplayCommand.TaskTimeout
            str = uint8('TaskTimeout');
        otherwise
            str = uint8('TaskPaused');
            valid = uint8(0);
    end
end